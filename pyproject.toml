[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "jetblack-serialization"
version = "4.0.0-alpha.3"
description = "Serialization for JSON and XML using typing"
authors = [
  { name="Rob Blackbourn", email="rob.blackbourn@gmail.com" },
]
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
readme = "README.md"
keywords = ['serialization', 'JSON', 'XML', 'YAML']
license = {text = "Apache-2.0"}
dependencies = [
    "jetblack-iso8601==2.0.0a1",
]

[project.optional-dependencies]
xml = [
    "lxml>=5.2.2,<6"
]
yaml = [
    "pyyaml>=6.0.1,<7"
]
dev = [
    "pytest",
    "coverage",
    "autopep8",
    "pylint",
    "mypy",
    "tox",
    "virtualenv-pyenv",
    "stringcase",
    "types-pyyaml>=6,<7",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "jetblack-markdown",
    "mike",
]

[project.urls]
Homepage = "https://github.com/rob-blackbourn/jetblack-serialization"
Issues = "https://github.com/rob-blackbourn/jetblack-serialization/issues"

# pytest
[tool.pytest.ini_options]
testpaths = [
    "tests",
]

# mypy
[tool.mypy]
files = [ "src/jetblack_serialization", "tests" ]

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "stringcase"
ignore_missing_imports = true

# pylint
[tool.pylint.main]
py-version = "3.12"
jobs = 4

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_"]
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]

[tool.pylint."messages control"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "use-implicit-booleaness-not-comparison-to-string",
    "use-implicit-booleaness-not-comparison-to-zero",
    "missing-module-docstring",
]

[tool.tox]
requires = [
    "tox>=4.19",
    "pytest>=8.3.5"
]
env_list = ["3.12", "3.13", "type"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
allowlist_externals = ["pytest"]
deps = [
    "jetblack-iso8601>=1.0.2,<2",
    "pytest>=8,<9",
    "pyyaml>=6.0.1,<7",
    "lxml>=5.2.2,<6",
    "stringcase>=1.2.0,<2",
] 
commands = [
    ["pytest"]
]

[tool.tox.env.type]
description = "run type check on code base"
deps = [
    "mypy>=1.14.1,<2",
    "types-pyyaml>=6,<7",
]
# commands = [["mypy", "src{/}jetblack_serialization"], ["mypy", "tests"]]
commands = [
    ["mypy", "src{/}jetblack_serialization"],
    # ["mypy", "tests"]
]
